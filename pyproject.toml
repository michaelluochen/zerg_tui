[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ztc"
version = "0.1.0"
description = "Zerg Terminal Client - A terminal-native client for the Zerg AI agent"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    { name = "Zerg Team", email = "team@zerg.ai" },
]
keywords = ["ai", "terminal", "tui", "copilot", "agent"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Version Control :: Git",
]
dependencies = [
    "textual[syntax]>=0.84.0",
    "websockets>=12.0",
    "pydantic>=2.9.0",
    "aiohttp>=3.9.0",
    "GitPython>=3.1.0",
    "click>=8.1.0",
    "pyperclip>=1.8.2",
    "humanize>=4.9.0",
    "aiosqlite>=0.20.0",
    "sqlmodel>=0.0.9",
    "ptyprocess>=0.7.0",
    "pexpect>=4.9.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "black>=24.8.0",
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pre-commit>=3.8.0",
]

remote = [
    "paramiko>=3.4.0",
    "asyncssh>=2.14.0",
]

[project.scripts]
ztc = "ztc.main:main"
ztc-server = "ztc.server:main"

[project.urls]
Homepage = "https://github.com/zerg/zerg-tui"
Documentation = "https://docs.zerg.ai/ztc"
Repository = "https://github.com/zerg/zerg-tui"
Issues = "https://github.com/zerg/zerg-tui/issues"

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "PTH",  # flake8-use-pathlib
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
]
ignore = [
    "E501",  # Line too long (handled by black)
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "--cov=ztc --cov-report=term-missing"